print("TASK2: CodeAlpha_Basic_Chatbot")

import random
import nltk
from nltk.chat.util import Chat, reflections

# Download NLTK resources
nltk.download('punkt')

# Define more patterns and responses
pairs = [
    (r'hi|hello|hey', ['Hello!', 'Hi there!', 'Hey!', 'Hello! How can I help you today?']),
    (r'what\'s up|what is up|sup|wassup', ["Not much! How about you?", "I'm here to chat with you! What about you?", "Just here to assist you! What's up with you?"]),
    (r'great', ["That's great to hear! How can I assist you today?", "Good to hear! How can I help you?"]),
    (r'how are you?', ["I'm a chatbot, so I'm always good! How are you?", "I'm here to assist you! How are you feeling today?"]),
    (r'(i am|i\'m|im|i feel) (good|great|fine|okay|ok|well)', ["That's great to hear! How can I assist you today?", "Good to hear! How can I help you?"]),
    (r'(i am|i\'m|im|i feel) (sad|not well|unwell|bad|sick)', ["I'm sorry to hear that. Is there anything I can do to help?", "I'm here for you. How can I assist you?"]),
    (r'what is your name?', ["I'm a chatbot created to assist you. You can call me Chatbot.", "You can call me Chatbot."]),
    (r'thank you|thanks|thank you very much|thanks a lot', ["You're welcome!", "Happy to help!", "Anytime!"]),
    (r'you\'re great|you are great|you\'re amazing|you are amazing', ["Thank you!", "You're so kind!", "I appreciate it!"]),
    (r'i appreciate it|i appreciate you', ["I'm glad I could help!", "You're welcome!", "Thank you!"]),
    (r'bye', ['Goodbye!', 'See you later!', 'Have a great day!']),
    (r'what can you do?', ["I can help you with basic questions and have a simple conversation. Try asking me something!", "I can chat with you and answer some basic questions."]),
    (r'what is the weather like?', ["I don't have real-time data, but you can check a weather website or app for that information.", "I'm not sure, but checking a weather website or app should help!"]),
    (r'tell me a joke', ["Why don't scientists trust atoms? Because they make up everything!", "Why did the scarecrow win an award? Because he was outstanding in his field!", "How does a penguin build its house? Igloos it together!"]),
    (r'tell me a fun fact', ["Did you know that honey never spoils? Archaeologists have found pots of honey in ancient Egyptian tombs that are over 3,000 years old and still edible!", "A group of flamingos is called a 'flamboyance'.", "Octopuses have three hearts!"]),
    (r'(.*) help (.*)', ["I can try to help! Please explain what you need assistance with.", "I'm here to help. Tell me what you need."]),
    (r'what is your purpose?', ["My purpose is to assist and entertain you with simple conversations.", "I'm here to chat and help with basic questions!"]),
    (r'what is (.*)?', ["I'm not sure about that, but you can look it up online for more details.", "I don't have detailed information on that topic. You might want to check online."]),
    (r'who created you?', ["I was created by a team of developers to assist with basic conversations and questions.", "A team of developers created me using Python and NLTK."]),
    (r'tell me about (.*)', ["I don't have detailed information on that topic, but you can look it up online for more details.", "You might want to search online for more information about that."]),
    (r'who is your creator?', ["I was created by a team of developers using Python and NLTK.", "A team of developers built me to assist with conversations."]),
    (r'how old are you?', ["I don't have an age like humans. I'm a chatbot and exist to assist you!", "I'm a chatbot, so I don't have an age like humans do."]),
    (r'what is your favorite color?', ["As a chatbot, I don't have preferences like humans do, but I think blue is quite nice!", "I don't have a favorite color, but I like the idea of blue."]),
    (r'(.*) (location|city)', ['I am a virtual assistant and donâ€™t have a physical location, but I am here to help you wherever you are.', "I exist in the virtual world, so I don't have a physical location."]),
    (r'(.*) (created|made) you?', ['I was created by a team of developers using Python and NLTK.', "A team of developers built me using Python and NLTK."]),
    (r'can you (.*)', ["I can try to help with that! What exactly do you need assistance with?", "I'll do my best to help you. What do you need?"]),
    (r'(.*) (movie|film)', ["I love movies! What is your favorite movie?", "Movies are great! Do you have a favorite?"]),
    (r'(.*) music', ["Music is wonderful! What kind of music do you like?", "I enjoy all kinds of music! What about you?"]),
    (r'what is the meaning of life?', ["The meaning of life can vary for everyone. What do you think it is?", "That's a deep question! What do you think the meaning of life is?"]),
    (r'do you have any hobbies?', ["I don't have hobbies like humans, but I enjoy assisting you!", "I don't have hobbies, but I like chatting with you!"]),
    (r'can you cook?', ["I can't cook, but I can help you find recipes online!", "I'm not able to cook, but I can suggest some recipes if you want."]),
    (r'what do you do in your free time?', ["I don't have free time like humans do, but I'm always here to assist you!", "I'm here to chat with you whenever you need me."]),
    (r'what is your favorite book?', ["I don't have favorites, but I know a lot of people love 'To Kill a Mockingbird' by Harper Lee.", "I don't read books, but I've heard '1984' by George Orwell is very popular."]),
    (r'what programming languages do you know?', ["I can help with Python, JavaScript, Java, C++, and more! What are you working on?", "I am familiar with many languages like Python, Java, and C++. What can I help you with?"]),
    (r'can you help me with (Python|Java|JavaScript|C\+\+)?', ["Sure! What specifically do you need help with in %1?", "I'd be happy to help with %1! What's your question?"]),
    (r'what are some good resources to learn (Python|Java|JavaScript|C\+\+)?', ["You can check out resources like Codecademy, Coursera, and freeCodeCamp for learning %1.", "I recommend looking into sites like Codecademy, Coursera, or even YouTube tutorials for %1."]),
    (r'how can I improve my coding skills?', ["Practice is key! Work on projects, contribute to open source, and solve coding challenges on platforms like LeetCode or HackerRank.", "Keep coding! Try building your own projects, join coding communities, and practice on sites like LeetCode or Codewars."]),
    (r'what should I include in my programming portfolio?', ["Include projects that showcase your skills, such as web apps, data analysis projects, and any open source contributions.", "Show a variety of projects that highlight different skills, such as web development, data science, and any contributions to open source."]),
    (r'how do I prepare for a coding interview?', ["Practice common coding problems, review data structures and algorithms, and do mock interviews with friends or online platforms.", "Focus on practicing coding problems, understanding data structures and algorithms, and consider mock interviews to build confidence."]),
    (r'what are some tips for applying to internships?', ["Tailor your resume to highlight relevant skills and experience, network with professionals, and prepare well for interviews.", "Customize your resume for each application, build a strong LinkedIn profile, and make sure to prepare thoroughly for interviews."]),
    (r'how can I find programming internships?', ["Check job boards like Indeed, LinkedIn, and Glassdoor, and also look at company career pages and networking events.", "Use job search sites like LinkedIn, Indeed, and Glassdoor, and attend career fairs and networking events."]),
    (r'what should I do during my internship?', ["Focus on learning as much as you can, ask for feedback, and try to contribute to meaningful projects.", "Make sure to learn new skills, seek feedback regularly, and work on projects that add value to the team."]),
    (r'what is a good project to start with?', ["Consider building a personal website, a simple game, or a basic CRUD application to get started.", "A personal website, a to-do list app, or a simple game are great projects to begin with."]),
    (r'what is an internship?', ["An internship is a period of work experience offered by an organization for a limited period of time. It is often used to gain relevant skills and experience in a particular field.", "Internships provide practical experience in a job setting and can help you build skills and a professional network."]),
    (r'why are internships important?', ["Internships provide hands-on experience, help you develop professional skills, and can lead to job offers.", "They give you practical experience, enhance your resume, and offer networking opportunities."]),
    (r'how do I write a resume for an internship?', ["Highlight your skills, academic achievements, and any relevant projects or volunteer work. Tailor it to the specific internship you're applying for.", "Focus on your education, skills, projects, and any work experience you have. Customize it for each internship application."]),
    (r'what should I expect during a programming internship?', ["Expect to work on real projects, learn from experienced developers, and improve your coding skills. You may also attend meetings and collaborate with a team.", "You will likely work on coding tasks, participate in team meetings, and receive mentorship from senior developers."]),
    (r'how do I get a programming job after an internship?', ["Perform well during your internship, network with professionals, and express your interest in a full-time position. Follow up with your internship supervisor.", "Make a good impression during your internship, stay in touch with your colleagues, and apply for open positions at the company."]),
    (r'what are the best practices for coding?', ["Follow clean code principles, write comments, use version control, and test your code thoroughly.", "Write readable and maintainable code, use meaningful variable names, and follow the coding standards of your team or organization."]),
    (r'what is version control?', ["Version control is a system that tracks changes to your code over time. Git is a popular version control system used by many developers.", "It helps you manage and track changes to your code, collaborate with others, and revert to previous versions if needed. Git is commonly used for this purpose."]),
    (r'how can I contribute to open source?', ["Find a project you're interested in on platforms like GitHub, read the contribution guidelines, and start with small issues or documentation improvements.", "Look for beginner-friendly projects on GitHub, read their contributing guidelines, and start by fixing bugs or adding documentation."]),
    (r'what is GitHub?', ["GitHub is a web-based platform used for version control and collaborative coding. It allows developers to host and review code, manage projects, and collaborate with others.", "It's a platform for hosting and sharing code, using Git for version control, and collaborating on open source and private projects."]),
    (r'how do I use Git?', ["Learn basic Git commands like `git init`, `git clone`, `git add`, `git commit`, and `git push`. There are many tutorials and documentation available online.", "Start with basic commands like `git add`, `git commit`, and `git push`. Follow online tutorials or use Git's official documentation."]),
    (r'what is a pull request?', ["A pull request is a way to propose changes to a codebase in a collaborative project. It allows others to review your changes before they are merged.", "It's a request to merge your changes into the main codebase. It enables code review and discussion before the changes are accepted."]),
    (r'what are some common programming mistakes?', ["Common mistakes include not testing code thoroughly, not using version control, writing unclear code, and not handling errors properly.", "Typical mistakes are poor error handling, lack of comments, not testing, and writing code that's hard to read or maintain."]),
    (r'how do I debug my code?', ["Use debugging tools, add print statements, and carefully check your code for logical errors. Break down the problem and test parts of your code separately.", "Check for syntax errors, use a debugger, add print statements, and review your code logic step by step."]),
    (r'what is agile methodology?', ["Agile is a set of principles for software development that promotes iterative development, collaboration, and flexibility. It includes practices like Scrum and Kanban.", "It's an approach to software development emphasizing iterative progress, collaboration, and adaptability. Common frameworks include Scrum and Kanban."]),
    (r'what is Scrum?', ["Scrum is an agile framework for managing software development. It involves roles like Scrum Master and Product Owner, and practices like sprints and daily stand-ups.", "It's a framework used in agile development, featuring short iterations called sprints, daily stand-up meetings, and roles like Scrum Master and Product Owner."]),
    (r'how can I learn to code efficiently?', ["Set clear goals, practice regularly, work on projects, and seek feedback from others. Use online resources, books, and coding challenges to improve.", "Focus on consistent practice, work on real projects, get feedback, and use online tutorials, coding platforms, and books to learn."]),
    (r'what are coding challenges?', ["Coding challenges are problems or exercises designed to test your programming skills. They are available on platforms like LeetCode, HackerRank, and Codewars.", "They are exercises to practice and improve your coding skills, found on sites like LeetCode, HackerRank, and Codewars."]),
    (r'how do I handle coding stress?', ["Take regular breaks, practice good time management, and seek help when needed. Remember to balance coding with other activities you enjoy.", "Manage your time well, take breaks, and don't hesitate to ask for help. Make sure to have a balance between coding and relaxation."]),
    (r'what is a hackathon?', ["A hackathon is an event where programmers collaborate intensively on software projects, typically within a short time frame, like 24-48 hours.", "It's a competition where developers create projects within a limited time, often focusing on innovation and collaboration."]),
    (r'how do I start learning programming?', ["Choose a language, find online courses or tutorials, and start with basic concepts. Practice regularly and build small projects.", "Begin with a language you're interested in, use online resources or books, and focus on fundamentals. Practice is key."]),
    (r'what are some good beginner programming languages?', ["Python, JavaScript, and Ruby are great for beginners due to their readability and community support.", "Consider starting with Python, JavaScript, or Ruby. They are user-friendly and have a lot of learning resources available."]),
    (r'what is the difference between frontend and backend development?', ["Frontend development focuses on the user interface and user experience, while backend development deals with server-side logic, databases, and application integration.", "Frontend is about creating the parts of a website that users interact with, while backend involves managing data, server logic, and application workflows."]),
    (r'what is full stack development?', ["Full stack development involves working on both the frontend and backend of a web application. Full stack developers have skills in both areas.", "It means being proficient in both frontend and backend development, capable of handling the entire development process of a web application."]),
    (r'what are some important data structures?', ["Common data structures include arrays, linked lists, stacks, queues, hash tables, and binary trees.", "Important data structures are arrays, linked lists, stacks, queues, hash tables, and trees. Each has its own use cases and benefits."]),
    (r'what are algorithms?', ["Algorithms are step-by-step procedures or formulas for solving problems. They are fundamental to computer science.", "An algorithm is a set of instructions designed to perform a specific task or solve a particular problem."]),
    (r'how can I improve my problem-solving skills?', ["Practice coding challenges, study algorithms and data structures, and break down problems into smaller steps.", "Solve different types of problems, learn various algorithms and data structures, and practice regularly on coding platforms."]),
    (r'what is object-oriented programming?', ["Object-oriented programming (OOP) is a programming paradigm based on the concept of objects, which can contain data and code. Common OOP languages include Java, C++, and Python.", "OOP is a style of programming that organizes code into objects that contain both data and methods. It's used to structure software in a modular and reusable way."]),
    (r'what is functional programming?', ["Functional programming is a paradigm where programs are constructed by applying and composing functions. It emphasizes immutability and pure functions.", "It's a programming style that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data."]),
    (r'what is machine learning?', ["Machine learning is a field of artificial intelligence that focuses on building systems that can learn from and make decisions based on data.", "It's a type of AI that allows computers to learn from data and improve their performance over time without being explicitly programmed."]),
    (r'how do I start with machine learning?', ["Learn the basics of statistics and linear algebra, then study key machine learning concepts and algorithms. Use platforms like Coursera, edX, or Khan Academy.", "Begin with foundational math, then explore introductory courses in machine learning on websites like Coursera, edX, or Udacity. Practical projects are also important."]),
    (r'what are the best programming practices?', ["Write clean and readable code, use version control, document your code, and test thoroughly.", "Adopt practices like writing clear code, using version control systems, documenting your code, and regularly testing your code."]),
    (r'how do I write clean code?', ["Follow consistent naming conventions, write small and focused functions, and add comments where necessary. Keep your code DRY (Don't Repeat Yourself).", "Use descriptive names, keep functions short and to the point, and comment on complex logic. Follow principles like DRY and KISS (Keep It Simple, Stupid)."]),
    (r'what are some popular programming frameworks?', ["Popular frameworks include Django and Flask for Python, React and Angular for JavaScript, and Spring for Java.", "Some widely used frameworks are Django and Flask for Python, React and Vue.js for JavaScript, and Spring for Java."]),
    (r'how do I collaborate on coding projects?', ["Use version control systems like Git, communicate regularly with your team, and follow a clear workflow.", "Collaborate using version control (e.g., Git), maintain good communication with your team, and use collaborative platforms like GitHub or GitLab."]),
    (r'what are coding bootcamps?', ["Coding bootcamps are intensive, short-term training programs that teach programming skills and often focus on preparing students for tech jobs.", "They are immersive programs designed to teach programming and other tech skills quickly, often with a focus on job placement."]),
    (r'are coding bootcamps worth it?', ["They can be worth it if you are looking for a structured and fast-paced learning environment. Research different bootcamps to find one that suits your needs.", "Coding bootcamps can be valuable for gaining skills quickly and making a career switch, but it's important to choose a reputable one."]),
    (r'how do I balance work and learning to code?', ["Set aside dedicated time for coding each day, use a schedule, and take breaks to avoid burnout.", "Prioritize your tasks, allocate specific times for learning, and ensure you have time to rest and recharge."]),
    (r'what is a good way to stay updated with programming trends?', ["Follow tech blogs, join programming communities, attend webinars and conferences, and keep learning new technologies.", "Read tech blogs, participate in forums and coding groups, and stay active in professional networks like LinkedIn."]),
    (r'how do I network with other programmers?', ["Join local meetups, participate in online forums, attend conferences, and engage with others on platforms like LinkedIn and GitHub.", "Network by attending industry events, joining online communities, and contributing to open source projects."]),
    (r'what are some essential tools for programmers?', ["Essential tools include code editors (like VS Code), version control systems (like Git), and platforms for collaboration (like GitHub).", "Key tools include IDEs like Visual Studio Code, version control systems like Git, and collaborative platforms like GitHub or GitLab."]),
    (r'what is a code review?', ["A code review is a process where peers examine each other's code to find and fix mistakes, improve code quality, and share knowledge.", "It's a practice where developers review each other's code to ensure it meets quality standards, find bugs, and share knowledge."]),
    (r'what is refactoring?', ["Refactoring is the process of restructuring existing code without changing its external behavior to improve readability, maintainability, and performance.", "It's the practice of improving the internal structure of code while keeping its functionality intact."]),
    (r'how do I get better at coding?', ["Practice regularly, work on diverse projects, seek feedback, and continuously learn new concepts and technologies.", "Keep coding consistently, tackle a variety of projects, get feedback from peers, and stay updated with new developments in the field."]),
    (r'what is the importance of unit testing?', ["Unit testing involves testing individual components of your code to ensure they work correctly. It helps catch bugs early and makes your code more reliable.", "It's the practice of testing small parts of your code (units) in isolation to ensure they function as expected, which helps in identifying bugs early."]),
    (r'how do I handle failure in coding?', ["View failure as a learning opportunity, analyze your mistakes, seek help when needed, and keep practicing.", "Embrace failure as part of the learning process, learn from your mistakes, ask for assistance, and keep improving."]),
    (r'(.*)', ["I'm not sure how to respond to that. Can you rephrase it?", "Can you clarify what you mean?", "I don't understand. Can you give me more details?", "That's interesting! Can you tell me more?"])
]

# Create the chatbot
chatbot = Chat(pairs, reflections)
def chatbot_nltk():
    print("Hello! I'm a simple chatbot. Type 'bye' to exit.")
    while True:
        user_input = input("You: ")
        if user_input.lower() == "bye":
            print("Chatbot: Goodbye!")
            break
        response = chatbot.respond(user_input)
        print(f"Chatbot: {response}")

chatbot_nltk()
